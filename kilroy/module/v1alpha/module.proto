/**
 * Definitions for module service.
 */
syntax = "proto3";

package kilroy.module.v1alpha;

/**
 * Request for GetMetadata.
 */
message GetMetadataRequest {}

/**
 * Response from GetMetadata.
 */
message GetMetadataResponse {
  string key = 1; // The key of the module.
  string description = 2; // The description of the module.
}

/**
 * Request for GetPostSchema.
 */
message GetPostSchemaRequest {}

/**
 * Response from GetPostSchema.
 */
message GetPostSchemaResponse {
  string schema = 1; // The schema of a post as a JSON string.
}

/**
 * Possible module statuses.
 */
enum Status {
  STATUS_UNSPECIFIED = 0; // Unspecified status.
  STATUS_LOADING = 1; // The module is loading.
  STATUS_READY = 2; // The module is ready.
}

/**
 * Request for GetStatus.
 */
message GetStatusRequest {}

/**
 * Response from GetStatus.
 */
message GetStatusResponse {
  Status status = 1; // The status of the module.
}

/**
 * Request for WatchStatus.
 */
message WatchStatusRequest {}

/**
 * Response from WatchStatus.
 */
message WatchStatusResponse {
  Status status = 1; // The status of the module.
}

/**
 * Request for GetConfigSchema.
 */
message GetConfigSchemaRequest {}

/**
 * Response from GetConfigSchema.
 */
message GetConfigSchemaResponse {
  string schema = 1; // The schema of the config as a JSON string.
}

/**
 * Request for GetConfig.
 */
message GetConfigRequest {}

/**
 * Response from GetConfig.
 */
message GetConfigResponse {
  string config = 1; // The config of the module as a JSON string.
}

/**
 * Request for WatchConfig.
 */
message WatchConfigRequest {}

/**
 * Response from WatchConfig.
 */
message WatchConfigResponse {
  string config = 1; // The config of the module as a JSON string.
}

/**
 * Request for SetConfig.
 */
message SetConfigRequest {
  string config = 1; // The config of the module as a JSON string.
}

/**
 * Response from SetConfig.
 */
message SetConfigResponse {
  string config = 1; // The config of the module as a JSON string.
}

/**
 * Request for Generate.
 */
message GenerateRequest {
  uint64 quantity = 1; // The quantity of posts to generate.
}

/**
 * Response from Generate.
 */
message GenerateResponse {
  string content = 1; // The content of the post as a JSON string.
  string metadata = 2; // The metadata of the post as a JSON string.
}

/**
 * Request for FitSupervised.
 */
message FitSupervisedRequest {
  string content = 1; // The content of the post as a JSON string.
  double score = 2; // The score of the post.
}

/**
 * Response from FitSupervised.
 */
message FitSupervisedResponse {}

/**
 * Request for FitReinforced.
 */
message FitReinforcedRequest {
  string content = 1; // The content of the post as a JSON string.
  string metadata = 2; // The metadata of the post as a JSON string.
  double score = 3; // The score of the post.
}

/**
 * Response from FitReinforced.
 */
message FitReinforcedResponse {}

/**
 * Metric configuration data.
 */
message MetricConfig {
  string id = 1; // The ID of the metric.
  string label = 2; // The label of the metric.
  string config = 3; // The config of the metric as a JSON string.
  repeated string tags = 4; // The tags of the metric.
}

/**
 * Request for GetMetricsConfig.
 */
message GetMetricsConfigRequest {}

/**
 * Response from GetMetricsConfig.
 */
message GetMetricsConfigResponse {
  repeated MetricConfig configs = 1; // The configs of the metrics.
}

/**
 * Request for WatchMetrics.
 */
message WatchMetricsRequest {}

/**
 * Response from WatchMetrics.
 */
message WatchMetricsResponse {
  string metric_id = 1; // The ID of the metric.
  uint64 dataset_id = 2; // The ID of the dataset.
  string data = 3; // The data of the metric as a JSON string.
}

/**
 * Request for Reset.
 */
message ResetRequest {}

/**
 * Response from Reset.
 */
message ResetResponse {}

/**
 * Request for Save.
 */
message SaveRequest {}

/**
 * Response from Save.
 */
message SaveResponse {}

/**
 * Module service.
 */
service ModuleService {
  // Returns the metadata of the module.
  rpc GetMetadata(GetMetadataRequest) returns (GetMetadataResponse) {}
  // Returns the schema of a post.
  rpc GetPostSchema(GetPostSchemaRequest) returns (GetPostSchemaResponse) {}
  // Returns the status of the module.
  rpc GetStatus(GetStatusRequest) returns (GetStatusResponse) {}
  // Returns an infinite stream of status updates.
  rpc WatchStatus(WatchStatusRequest) returns (stream WatchStatusResponse) {}
  // Returns the schema of the config.
  rpc GetConfigSchema(GetConfigSchemaRequest) returns (GetConfigSchemaResponse) {}
  // Returns the config of the module.
  rpc GetConfig(GetConfigRequest) returns (GetConfigResponse) {}
  // Returns an infinite stream of config updates.
  rpc WatchConfig(WatchConfigRequest) returns (stream WatchConfigResponse) {}
  // Sets the config of the module.
  rpc SetConfig(SetConfigRequest) returns (SetConfigResponse) {}
  // Generates posts.
  rpc Generate(GenerateRequest) returns (stream GenerateResponse) {}
  // Fits supervised.
  rpc FitSupervised(stream FitSupervisedRequest) returns (FitSupervisedResponse) {}
  // Fits reinforced.
  rpc FitReinforced(stream FitReinforcedRequest) returns (FitReinforcedResponse) {}
  // Returns the configs of the metrics.
  rpc GetMetricsConfig(GetMetricsConfigRequest) returns (GetMetricsConfigResponse) {}
  // Returns an infinite stream of metric updates.
  rpc WatchMetrics(WatchMetricsRequest) returns (stream WatchMetricsResponse) {}
  // Resets the module.
  rpc Reset(ResetRequest) returns (ResetResponse) {}
  // Saves the module.
  rpc Save(SaveRequest) returns (SaveResponse) {}
}
